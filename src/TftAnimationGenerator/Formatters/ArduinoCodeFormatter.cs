using System.IO;
using System.Threading.Tasks;

namespace TftAnimationGenerator.Formatters
{
    public class ArduinoCodeFormatter : ICodeFormatter
    {
        public async Task WriteHeaderAsync(StreamWriter writer, string prefix, int count, int width, int height)
        {
            await writer.WriteLineAsync("//----------------------------------------------------------------");
            await writer.WriteLineAsync("// This file was generated by TTF Animation Generator");
            await writer.WriteLineAsync("// https://github.com/ComputerBaer/TftAnimationGenerator");
            await writer.WriteLineAsync("//");
            await writer.WriteLineAsync("// Changes to this file may cause incorrect behavior");
            await writer.WriteLineAsync("// and will be lost if the animation is regenerated.");
            await writer.WriteLineAsync("//----------------------------------------------------------------\n");

            await writer.WriteLineAsync($"const int {prefix}FrameCount = {count};");
            await writer.WriteLineAsync($"const int {prefix}FrameWidth = {width};");
            await writer.WriteLineAsync($"const int {prefix}FrameHeight = {height};");

            await writer.WriteLineAsync($"const unsigned short PROGMEM {prefix}Frames[{count}][{width * height}] = {{");
        }
    }
}
